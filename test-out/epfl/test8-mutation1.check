error: write to non-mutable Sym(10) -> Some(TP(Sym(10),IfThenElse(Sym(9),Block(Sym(4)),Block(Sym(8)))))
at Sym(11)=Reflect(ArrayUpdate(Sym(10),Const(40),Const(40.0)),Summary(false,false,false,false,false,List(Sym(4), Sym(8)),List(Sym(4), Sym(8)),List(Sym(10)),List(Sym(10))),List(Sym(4), Sym(8)))
promoting to effect: Sym(12)=Reflect(ArrayIndex(Sym(10),Const(50)),Summary(false,false,false,false,false,List(Sym(4), Sym(8)),List(Sym(4), Sym(8)),List(),List()),List(Sym(4), Sym(8)))
depends on  Sym(4)
depends on  Sym(8)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Any)) {
def apply(x0:Int): Any = {
val x3 = LoopArray(100) { x1 => 
0.0
}
val x4 = x3.clone // mutable
val x7 = LoopArray(100) { x5 => 
0.0
}
val x8 = x7.clone // mutable
val x9 = x0 > 7
val x10 = if (x9) {
x4
} else {
x8
}
val x11 = x10.update(40, 40.0)
val x12 = x10.apply(50)
val x13 = println(x12)
x13
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
