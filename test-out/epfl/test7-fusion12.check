/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Unit)=>(Unit)) {
def apply(x0:Unit): Unit = {
val x5_buff = new ArrayBuilder[Int]
for (x1 <- 0 until 1000) {
x5_buff += x1
val x3 = ()
}
val x5 = x5_buff.result
val x15_buff = new ArrayBuilder[Array[Int]]
for (x11 <- 0 until 10) {
x15_buff += x5
val x13 = ()
}
val x15 = x15_buff.result
val x110 = x15.length
val x10_buff = new ArrayBuilder[Int]
for (x6 <- 0 until 1001) {
x10_buff += x6
val x8 = ()
}
val x10 = x10_buff.result
val x328 = x10.length
var x345 = 0
for (x16 <- 0 until 11) {
val x343 = () // foreach (this is perfectly fine)
for (x26 <- 0 until x110) {
val x111 = x15.apply(x26)
val x263 = x111.apply(x38)
val x264 = x263 > 1111
val x341 = if (x264) {
val x337 = () // foreach (this is perfectly fine)
for (x69 <- 0 until x328) {
val x329 = x10.apply(x69)
val x330 = x329 < 2222
val x335 = if (x330) {
x345 += x329
val x331 = ()
x331
} else {
val x333 = () // skip
x333
}
}
x337
} else {
val x321 = () // skip
x321
}
}
}
val x346 = println(x345)
val x95 = x346
x95
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
